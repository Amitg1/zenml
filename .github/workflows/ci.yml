name: Build, Lint, Unit & Integration Test

on:
  workflow_dispatch:
  workflow_call:
  push:
    branches: ["main", "develop"]
    paths-ignore: ["docs/**", "docker/**", "*", "!pyproject.toml", "**.md"]
  pull_request:
    types: [opened, synchronize, ready_for_review]
    paths-ignore: ['docs/**', 'docker/**', '*', '!pyproject.toml', '**.md']

concurrency:
  # New commit on branch cancels running workflows of the same branch
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # poetry-install:
  #   if: github.event.pull_request.draft == false
  #   uses: ./.github/workflows/poetry-install.yml
  #   secrets: inherit

  # lint-code:
  #   needs: poetry-install
  #   uses: ./.github/workflows/lint.yml
  #   secrets: inherit

  # unit-test:
  #   needs: poetry-install
  #   uses: ./.github/workflows/unit-test.yml
  #   secrets: inherit

  integration-test:
    # needs: poetry-install
    # Exit if its a commit from Gitbook
    if: ${{ ! startsWith(github.event.head_commit.message, 'GitBook:') }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.8' ]
        test_environment: [ "docker-server-docker-orchestrator" ]

      fail-fast: false

    uses: ./.github/workflows/integration-test.yml
    with:
      os: ${{ matrix.os }}
      python-version: ${{ matrix.python-version }}
      test_environment: ${{ matrix.test_environment }}
      enable_tmate: "on-failure"
      tmate_timeout: 120
    secrets: inherit


  # spell-check:
  #   uses: ./.github/workflows/spellcheck.yml

  # docstring-check:
  #   uses: ./.github/workflows/docstring.yml

  # markdown-link-check:
  #   uses: ./.github/workflows/markdown-link-check.yml
